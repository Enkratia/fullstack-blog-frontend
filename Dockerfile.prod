FROM node:20.11.1
# FROM node:20.11.1-alpine AS base

# FROM base AS builder

WORKDIR /app

# COPY package*.json ./
COPY package.json package-lock.json* ./

# RUN npm ci --cache .npm --cpu=x64 --os=linux sharp

# COPY . .
COPY src ./src
COPY public ./public
COPY next.config.js .
COPY tsconfig.json .

# эти переменные доступны только во время создания изображения, если пересобрать изображеие в другом месте, то их не будет
# ARG NEXTAUTH_SECRET
# ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
# ARG NEXTAUTH_URL
# ENV NEXTAUTH_URL=${NEXTAUTH_URL}

# --cpu=x64 --os=linux sharp === to fix npm bug with sharp
# RUN npm install --cpu=x64 --os=linux sharp
RUN npm ci --cache .npm --cpu=x64 --os=linux sharp

RUN npm run build

# Step 2. Production image, copy all the files and run next
# FROM base AS runner

# WORKDIR /app

# Don't run production as root
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# USER nextjs

# COPY --from=builder /app/public ./public

# COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Environment variables must be redefined at run time
# ARG NEXTAUTH_SECRET
# ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
# ARG NEXTAUTH_URL
# ENV NEXTAUTH_URL=${NEXTAUTH_URL}

# Note: Don't expose ports here, Compose will handle that for us

ENV PORT=3000
EXPOSE 3000

# CMD ["node", "server.js"]

ENV PORT=3000

EXPOSE 3000

CMD ["npm", "run", "start"]

# create dev/prod container/image:
# docker build -f Dockerfile.dev -t nextjsdev:1.0 .
# docker build -f Dockerfile.prod -t nextjsprod:1.0 .
#
# -f === filename (if filename !== Dockerfile)
# -t === tag (to give the image a name)
# 1.0 === volume of image file (any)
# . === to place image in the same directory

# run dev container/image:
# docker run -d -p 3000:3000 nextjsdev:1.0
# -d === remain terminal trackable ?
# 3000:3000 === local port? : port of the image?
# nextjsdev:1.0 === name:volume of image

# show running/stopped containers:
# docker ps

# stop container:
# docker stop 62c4a683eea4
# 62c4a683eea4 === container ID

# show all images
# docker images


